[Config TCP_ECMP_fattree]
network = FatTree

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = true}
**.use_power_of_n_lb = ${usingPowerOfNLB = false}
**.edge[*].random_power_factor = ${edgeRandomPowerFactor = 2}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = $edgeRandomPowerFactor}
**.core[*].random_power_factor = ${coreRandomPowerFactor = $edgeRandomPowerFactor}

**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = false}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s
**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = false}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s

sim-time-limit = ${simTimeLimit = 5.2}s

**.k = ${K = 8}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097500}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.122000, 0.040600, 0.024400, 0.017400, 0.013500}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "./"

**.edge[*].eth[*].mac.queue.typename = ${edgeQueueType = "V2PIFO"}
**.edge[*].eth[*].mac.queue.dataCapacity = ${edgeQueueSizePacketBytes = 300000}B
**.edge[*].use_v2_pifo = ${edgeUseV2Pifo = true}
**.edge[*].eth[*].mac.queue.dropper_type = ${edgeDropperType = "FIFO"}
**.edge[*].eth[*].mac.queue.scheduler_type = ${edgeSchedulerType = "FIFO"}

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = $edgeQueueType}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = $edgeQueueSizePacketBytes}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = $edgeUseV2Pifo}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = $edgeDropperType}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = $edgeSchedulerType}

**.core[*].eth[*].mac.queue.typename = ${coreQueueType = $edgeQueueType}
**.core[*].eth[*].mac.queue.dataCapacity = ${coreQueueSizePacketBytes = $edgeQueueSizePacketBytes}B
**.core[*].use_v2_pifo = ${coreUseV2Pifo = $edgeUseV2Pifo}
**.core[*].eth[*].mac.queue.dropper_type = ${coreDropperType = $edgeDropperType}
**.core[*].eth[*].mac.queue.scheduler_type = ${coreSchedulerType = $edgeSchedulerType}

**.edge[*].eth[*].mac.typename = ${edgeMacTypeName = "AugmentedEtherMac"}
**.agg[*].eth[*].mac.typename = ${aggMacTypeName = $edgeMacTypeName}
**.core[*].eth[*].mac.typename = ${coreMacTypeName = $edgeMacTypeName}
**.edge[*].relayUnit.typename = ${edgeRelayTypeName = "BouncingIeee8021dRelay"}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = $edgeRelayTypeName}
**.core[*].relayUnit.typename = ${coreRelayTypeName = $edgeRelayTypeName}

**.edge[*].bounce_randomly = ${edgeBounceRandomly = false}
**.agg[*].bounce_randomly = ${aggBounceRandomly = $edgeBounceRandomly}
**.core[*].bounce_randomly = ${coreBounceRandomly = $edgeBounceRandomly}

**.edge[*].bounce_randomly_v2 = ${edgeBounceRandomlyPowerOfN = false}
**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = $edgeBounceRandomlyPowerOfN}
**.core[*].bounce_randomly_v2 = ${coreBounceRandomlyPowerOfN = $edgeBounceRandomlyPowerOfN}
**.edge[*].random_power_bounce_factor = ${edgeBounceRandomlyPowerFactor = 2}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = $edgeBounceRandomlyPowerFactor}
**.core[*].random_power_bounce_factor = ${coreBounceRandomlyPowerFactor = $edgeBounceRandomlyPowerFactor}

**.edge[*].denominator_for_retrasnmissions = ${edgeDenomRet = 2}
**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = $edgeDenomRet}
**.core[*].denominator_for_retrasnmissions = ${coreDenomRet = $edgeDenomRet}

**.arp.typename = "GlobalArp"
**.edge[*].learn_mac_addresses = false
**.agg[*].learn_mac_addresses = false
**.core[*].learn_mac_addresses = false
**.edge[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_edge[" + string(parentIndex()) + "].txt"
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_agg[" + string(parentIndex()) + "].txt"
**.core[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_core[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}



########################################################################
[Config TCP_DRILL_fattree]
network = FatTree

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = false}
**.use_power_of_n_lb = ${usingPowerOfNLB = true}
**.edge[*].random_power_factor = ${edgeRandomPowerFactor = 2}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = $edgeRandomPowerFactor}
**.core[*].random_power_factor = ${coreRandomPowerFactor = $edgeRandomPowerFactor}

**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = false}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s
**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = false}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s

sim-time-limit = ${simTimeLimit = 5.2}s

**.k = ${K = 8}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097500}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.122000, 0.040600, 0.024400, 0.017400, 0.013500}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "./"

**.edge[*].eth[*].mac.queue.typename = ${edgeQueueType = "V2PIFO"}
**.edge[*].eth[*].mac.queue.dataCapacity = ${edgeQueueSizePacketBytes = 300000}B
**.edge[*].use_v2_pifo = ${edgeUseV2Pifo = true}
**.edge[*].eth[*].mac.queue.dropper_type = ${edgeDropperType = "FIFO"}
**.edge[*].eth[*].mac.queue.scheduler_type = ${edgeSchedulerType = "FIFO"}

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = $edgeQueueType}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = $edgeQueueSizePacketBytes}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = $edgeUseV2Pifo}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = $edgeDropperType}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = $edgeSchedulerType}

**.core[*].eth[*].mac.queue.typename = ${coreQueueType = $edgeQueueType}
**.core[*].eth[*].mac.queue.dataCapacity = ${coreQueueSizePacketBytes = $edgeQueueSizePacketBytes}B
**.core[*].use_v2_pifo = ${coreUseV2Pifo = $edgeUseV2Pifo}
**.core[*].eth[*].mac.queue.dropper_type = ${coreDropperType = $edgeDropperType}
**.core[*].eth[*].mac.queue.scheduler_type = ${coreSchedulerType = $edgeSchedulerType}

**.edge[*].eth[*].mac.typename = ${edgeMacTypeName = "AugmentedEtherMac"}
**.agg[*].eth[*].mac.typename = ${aggMacTypeName = $edgeMacTypeName}
**.core[*].eth[*].mac.typename = ${coreMacTypeName = $edgeMacTypeName}
**.edge[*].relayUnit.typename = ${edgeRelayTypeName = "BouncingIeee8021dRelay"}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = $edgeRelayTypeName}
**.core[*].relayUnit.typename = ${coreRelayTypeName = $edgeRelayTypeName}

**.edge[*].bounce_randomly = ${edgeBounceRandomly = false}
**.agg[*].bounce_randomly = ${aggBounceRandomly = $edgeBounceRandomly}
**.core[*].bounce_randomly = ${coreBounceRandomly = $edgeBounceRandomly}

**.edge[*].bounce_randomly_v2 = ${edgeBounceRandomlyPowerOfN = false}
**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = $edgeBounceRandomlyPowerOfN}
**.core[*].bounce_randomly_v2 = ${coreBounceRandomlyPowerOfN = $edgeBounceRandomlyPowerOfN}
**.edge[*].random_power_bounce_factor = ${edgeBounceRandomlyPowerFactor = 2}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = $edgeBounceRandomlyPowerFactor}
**.core[*].random_power_bounce_factor = ${coreBounceRandomlyPowerFactor = $edgeBounceRandomlyPowerFactor}

**.edge[*].denominator_for_retrasnmissions = ${edgeDenomRet = 2}
**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = $edgeDenomRet}
**.core[*].denominator_for_retrasnmissions = ${coreDenomRet = $edgeDenomRet}

**.arp.typename = "GlobalArp"
**.edge[*].learn_mac_addresses = false
**.agg[*].learn_mac_addresses = false
**.core[*].learn_mac_addresses = false
**.edge[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_edge[" + string(parentIndex()) + "].txt"
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_agg[" + string(parentIndex()) + "].txt"
**.core[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_core[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}


########################################################################
[Config TCP_DIBS_fattree]
network = FatTree

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = true}
**.useECMP = ${usingECMP = true}
**.use_power_of_n_lb = ${usingPowerOfNLB = false}
**.edge[*].random_power_factor = ${edgeRandomPowerFactor = 2}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = $edgeRandomPowerFactor}
**.core[*].random_power_factor = ${coreRandomPowerFactor = $edgeRandomPowerFactor}

**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = false}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s
**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = false}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s

sim-time-limit = ${simTimeLimit = 5.2}s

**.k = ${K = 8}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097500}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.122000, 0.040600, 0.024400, 0.017400, 0.013500}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "./"

**.edge[*].eth[*].mac.queue.typename = ${edgeQueueType = "V2PIFO"}
**.edge[*].eth[*].mac.queue.dataCapacity = ${edgeQueueSizePacketBytes = 300000}B
**.edge[*].use_v2_pifo = ${edgeUseV2Pifo = true}
**.edge[*].eth[*].mac.queue.dropper_type = ${edgeDropperType = "FIFO"}
**.edge[*].eth[*].mac.queue.scheduler_type = ${edgeSchedulerType = "FIFO"}

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = $edgeQueueType}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = $edgeQueueSizePacketBytes}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = $edgeUseV2Pifo}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = $edgeDropperType}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = $edgeSchedulerType}

**.core[*].eth[*].mac.queue.typename = ${coreQueueType = $edgeQueueType}
**.core[*].eth[*].mac.queue.dataCapacity = ${coreQueueSizePacketBytes = $edgeQueueSizePacketBytes}B
**.core[*].use_v2_pifo = ${coreUseV2Pifo = $edgeUseV2Pifo}
**.core[*].eth[*].mac.queue.dropper_type = ${coreDropperType = $edgeDropperType}
**.core[*].eth[*].mac.queue.scheduler_type = ${coreSchedulerType = $edgeSchedulerType}

**.edge[*].eth[*].mac.typename = ${edgeMacTypeName = "AugmentedEtherMac"}
**.agg[*].eth[*].mac.typename = ${aggMacTypeName = $edgeMacTypeName}
**.core[*].eth[*].mac.typename = ${coreMacTypeName = $edgeMacTypeName}
**.edge[*].relayUnit.typename = ${edgeRelayTypeName = "BouncingIeee8021dRelay"}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = $edgeRelayTypeName}
**.core[*].relayUnit.typename = ${coreRelayTypeName = $edgeRelayTypeName}

**.edge[*].bounce_randomly = ${edgeBounceRandomly = true}
**.agg[*].bounce_randomly = ${aggBounceRandomly = $edgeBounceRandomly}
**.core[*].bounce_randomly = ${coreBounceRandomly = $edgeBounceRandomly}

**.edge[*].bounce_randomly_v2 = ${edgeBounceRandomlyPowerOfN = false}
**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = $edgeBounceRandomlyPowerOfN}
**.core[*].bounce_randomly_v2 = ${coreBounceRandomlyPowerOfN = $edgeBounceRandomlyPowerOfN}
**.edge[*].random_power_bounce_factor = ${edgeBounceRandomlyPowerFactor = 2}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = $edgeBounceRandomlyPowerFactor}
**.core[*].random_power_bounce_factor = ${coreBounceRandomlyPowerFactor = $edgeBounceRandomlyPowerFactor}

**.edge[*].denominator_for_retrasnmissions = ${edgeDenomRet = 2}
**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = $edgeDenomRet}
**.core[*].denominator_for_retrasnmissions = ${coreDenomRet = $edgeDenomRet}

**.arp.typename = "GlobalArp"
**.edge[*].learn_mac_addresses = false
**.agg[*].learn_mac_addresses = false
**.core[*].learn_mac_addresses = false
**.edge[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_edge[" + string(parentIndex()) + "].txt"
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_agg[" + string(parentIndex()) + "].txt"
**.core[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_core[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}


########################################################################
[Config TCP_VERTIGO_fattree]
network = FatTree

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = false}
**.use_power_of_n_lb = ${usingPowerOfNLB = true}
**.edge[*].random_power_factor = ${edgeRandomPowerFactor = 2}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = $edgeRandomPowerFactor}
**.core[*].random_power_factor = ${coreRandomPowerFactor = $edgeRandomPowerFactor}

**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = true}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s
**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = true}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s

sim-time-limit = ${simTimeLimit = 5.2}s

**.k = ${K = 8}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097500}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.122000, 0.040600, 0.024400, 0.017400, 0.013500}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "./"

**.edge[*].eth[*].mac.queue.typename = ${edgeQueueType = "V2PIFO"}
**.edge[*].eth[*].mac.queue.dataCapacity = ${edgeQueueSizePacketBytes = 300000}B
**.edge[*].use_v2_pifo = ${edgeUseV2Pifo = true}
**.edge[*].eth[*].mac.queue.dropper_type = ${edgeDropperType = "SRPT"}
**.edge[*].eth[*].mac.queue.scheduler_type = ${edgeSchedulerType = "SRPT"}

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = $edgeQueueType}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = $edgeQueueSizePacketBytes}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = $edgeUseV2Pifo}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = $edgeDropperType}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = $edgeSchedulerType}

**.core[*].eth[*].mac.queue.typename = ${coreQueueType = $edgeQueueType}
**.core[*].eth[*].mac.queue.dataCapacity = ${coreQueueSizePacketBytes = $edgeQueueSizePacketBytes}B
**.core[*].use_v2_pifo = ${coreUseV2Pifo = $edgeUseV2Pifo}
**.core[*].eth[*].mac.queue.dropper_type = ${coreDropperType = $edgeDropperType}
**.core[*].eth[*].mac.queue.scheduler_type = ${coreSchedulerType = $edgeSchedulerType}

**.edge[*].eth[*].mac.typename = ${edgeMacTypeName = "AugmentedEtherMac"}
**.agg[*].eth[*].mac.typename = ${aggMacTypeName = $edgeMacTypeName}
**.core[*].eth[*].mac.typename = ${coreMacTypeName = $edgeMacTypeName}
**.edge[*].relayUnit.typename = ${edgeRelayTypeName = "BouncingIeee8021dRelay"}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = $edgeRelayTypeName}
**.core[*].relayUnit.typename = ${coreRelayTypeName = $edgeRelayTypeName}

**.edge[*].bounce_randomly = ${edgeBounceRandomly = false}
**.agg[*].bounce_randomly = ${aggBounceRandomly = $edgeBounceRandomly}
**.core[*].bounce_randomly = ${coreBounceRandomly = $edgeBounceRandomly}

**.edge[*].bounce_randomly_v2 = ${edgeBounceRandomlyPowerOfN = true}
**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = $edgeBounceRandomlyPowerOfN}
**.core[*].bounce_randomly_v2 = ${coreBounceRandomlyPowerOfN = $edgeBounceRandomlyPowerOfN}
**.edge[*].random_power_bounce_factor = ${edgeBounceRandomlyPowerFactor = 2}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = $edgeBounceRandomlyPowerFactor}
**.core[*].random_power_bounce_factor = ${coreBounceRandomlyPowerFactor = $edgeBounceRandomlyPowerFactor}

**.edge[*].denominator_for_retrasnmissions = ${edgeDenomRet = 2}
**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = $edgeDenomRet}
**.core[*].denominator_for_retrasnmissions = ${coreDenomRet = $edgeDenomRet}

**.arp.typename = "GlobalArp"
**.edge[*].learn_mac_addresses = false
**.agg[*].learn_mac_addresses = false
**.core[*].learn_mac_addresses = false
**.edge[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_edge[" + string(parentIndex()) + "].txt"
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_agg[" + string(parentIndex()) + "].txt"
**.core[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_core[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}


########################################################################
[Config TCP_VERTIGO_LAS_fattree]
network = FatTree

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = false}
**.use_power_of_n_lb = ${usingPowerOfNLB = true}
**.edge[*].random_power_factor = ${edgeRandomPowerFactor = 2}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = $edgeRandomPowerFactor}
**.core[*].random_power_factor = ${coreRandomPowerFactor = $edgeRandomPowerFactor}

**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = true}
**.ipv4.ip.marking_type = ${markingType = "LAS"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s
**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = true}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s

sim-time-limit = ${simTimeLimit = 5.2}s

**.k = ${K = 8}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097500}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.122000, 0.040600, 0.024400, 0.017400, 0.013500}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "./"

**.edge[*].eth[*].mac.queue.typename = ${edgeQueueType = "V2PIFO"}
**.edge[*].eth[*].mac.queue.dataCapacity = ${edgeQueueSizePacketBytes = 300000}B
**.edge[*].use_v2_pifo = ${edgeUseV2Pifo = true}
**.edge[*].eth[*].mac.queue.dropper_type = ${edgeDropperType = "LAS"}
**.edge[*].eth[*].mac.queue.scheduler_type = ${edgeSchedulerType = "LAS"}

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = $edgeQueueType}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = $edgeQueueSizePacketBytes}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = $edgeUseV2Pifo}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = $edgeDropperType}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = $edgeSchedulerType}

**.core[*].eth[*].mac.queue.typename = ${coreQueueType = $edgeQueueType}
**.core[*].eth[*].mac.queue.dataCapacity = ${coreQueueSizePacketBytes = $edgeQueueSizePacketBytes}B
**.core[*].use_v2_pifo = ${coreUseV2Pifo = $edgeUseV2Pifo}
**.core[*].eth[*].mac.queue.dropper_type = ${coreDropperType = $edgeDropperType}
**.core[*].eth[*].mac.queue.scheduler_type = ${coreSchedulerType = $edgeSchedulerType}

**.edge[*].eth[*].mac.typename = ${edgeMacTypeName = "AugmentedEtherMac"}
**.agg[*].eth[*].mac.typename = ${aggMacTypeName = $edgeMacTypeName}
**.core[*].eth[*].mac.typename = ${coreMacTypeName = $edgeMacTypeName}
**.edge[*].relayUnit.typename = ${edgeRelayTypeName = "BouncingIeee8021dRelay"}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = $edgeRelayTypeName}
**.core[*].relayUnit.typename = ${coreRelayTypeName = $edgeRelayTypeName}

**.edge[*].bounce_randomly = ${edgeBounceRandomly = false}
**.agg[*].bounce_randomly = ${aggBounceRandomly = $edgeBounceRandomly}
**.core[*].bounce_randomly = ${coreBounceRandomly = $edgeBounceRandomly}

**.edge[*].bounce_randomly_v2 = ${edgeBounceRandomlyPowerOfN = true}
**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = $edgeBounceRandomlyPowerOfN}
**.core[*].bounce_randomly_v2 = ${coreBounceRandomlyPowerOfN = $edgeBounceRandomlyPowerOfN}
**.edge[*].random_power_bounce_factor = ${edgeBounceRandomlyPowerFactor = 2}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = $edgeBounceRandomlyPowerFactor}
**.core[*].random_power_bounce_factor = ${coreBounceRandomlyPowerFactor = $edgeBounceRandomlyPowerFactor}

**.edge[*].denominator_for_retrasnmissions = ${edgeDenomRet = 2}
**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = $edgeDenomRet}
**.core[*].denominator_for_retrasnmissions = ${coreDenomRet = $edgeDenomRet}

**.arp.typename = "GlobalArp"
**.edge[*].learn_mac_addresses = false
**.agg[*].learn_mac_addresses = false
**.core[*].learn_mac_addresses = false
**.edge[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_edge[" + string(parentIndex()) + "].txt"
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_agg[" + string(parentIndex()) + "].txt"
**.core[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_core[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}


########################################################################
[Config DCTCP_ECMP_fattree]
network = FatTree

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = true}
**.use_power_of_n_lb = ${usingPowerOfNLB = false}
**.edge[*].random_power_factor = ${edgeRandomPowerFactor = 2}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = $edgeRandomPowerFactor}
**.core[*].random_power_factor = ${coreRandomPowerFactor = $edgeRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "DCTcp"
**.tcp.ecnWillingness = ${ecnWill = true}

sim-time-limit = ${simTimeLimit = 5.2}s

**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = false}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s
**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = false}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s

**.k = ${K = 8}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097500}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.122000, 0.040600, 0.024400, 0.017400, 0.013500}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "./"

**.edge[*].eth[*].mac.queue.typename = ${edgeQueueType = "V2PIFO"}
**.edge[*].eth[*].mac.queue.dataCapacity = ${edgeQueueSizePacketBytes = 300000}B
**.edge[*].use_v2_pifo = ${edgeUseV2Pifo = true}
**.edge[*].eth[*].mac.queue.dropper_type = ${edgeDropperType = "FIFO"}
**.edge[*].eth[*].mac.queue.scheduler_type = ${edgeSchedulerType = "FIFO"}
**.edge[*].eth[*].mac.queue.dctcp_thresh = ${edgeQueueSizeDCTCPThresh = 65}

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = $edgeQueueType}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = $edgeQueueSizePacketBytes}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = $edgeUseV2Pifo}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = $edgeDropperType}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = $edgeSchedulerType}
**.agg[*].eth[*].mac.queue.dctcp_thresh = ${aggQueueSizeDCTCPThresh = $edgeQueueSizeDCTCPThresh}

**.core[*].eth[*].mac.queue.typename = ${coreQueueType = $edgeQueueType}
**.core[*].eth[*].mac.queue.dataCapacity = ${coreQueueSizePacketBytes = $edgeQueueSizePacketBytes}B
**.core[*].use_v2_pifo = ${coreUseV2Pifo = $edgeUseV2Pifo}
**.core[*].eth[*].mac.queue.dropper_type = ${coreDropperType = $edgeDropperType}
**.core[*].eth[*].mac.queue.scheduler_type = ${coreSchedulerType = $edgeSchedulerType}
**.core[*].eth[*].mac.queue.dctcp_thresh = ${coreQueueSizeDCTCPThresh = $edgeQueueSizeDCTCPThresh}

**.edge[*].eth[*].mac.typename = ${edgeMacTypeName = "AugmentedEtherMac"}
**.agg[*].eth[*].mac.typename = ${aggMacTypeName = $edgeMacTypeName}
**.core[*].eth[*].mac.typename = ${coreMacTypeName = $edgeMacTypeName}
**.edge[*].relayUnit.typename = ${edgeRelayTypeName = "BouncingIeee8021dRelay"}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = $edgeRelayTypeName}
**.core[*].relayUnit.typename = ${coreRelayTypeName = $edgeRelayTypeName}

**.edge[*].bounce_randomly = ${edgeBounceRandomly = false}
**.agg[*].bounce_randomly = ${aggBounceRandomly = $edgeBounceRandomly}
**.core[*].bounce_randomly = ${coreBounceRandomly = $edgeBounceRandomly}

**.edge[*].bounce_randomly_v2 = ${edgeBounceRandomlyPowerOfN = false}
**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = $edgeBounceRandomlyPowerOfN}
**.core[*].bounce_randomly_v2 = ${coreBounceRandomlyPowerOfN = $edgeBounceRandomlyPowerOfN}
**.edge[*].random_power_bounce_factor = ${edgeBounceRandomlyPowerFactor = 2}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = $edgeBounceRandomlyPowerFactor}
**.core[*].random_power_bounce_factor = ${coreBounceRandomlyPowerFactor = $edgeBounceRandomlyPowerFactor}

**.edge[*].denominator_for_retrasnmissions = ${edgeDenomRet = 2}
**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = $edgeDenomRet}
**.core[*].denominator_for_retrasnmissions = ${coreDenomRet = $edgeDenomRet}

**.arp.typename = "GlobalArp"
**.edge[*].learn_mac_addresses = false
**.agg[*].learn_mac_addresses = false
**.core[*].learn_mac_addresses = false
**.edge[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_edge[" + string(parentIndex()) + "].txt"
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_agg[" + string(parentIndex()) + "].txt"
**.core[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_core[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}


########################################################################
[Config DCTCP_DRILL_fattree]
network = FatTree

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = false}
**.use_power_of_n_lb = ${usingPowerOfNLB = true}
**.edge[*].random_power_factor = ${edgeRandomPowerFactor = 2}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = $edgeRandomPowerFactor}
**.core[*].random_power_factor = ${coreRandomPowerFactor = $edgeRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "DCTcp"
**.tcp.ecnWillingness = ${ecnWill = true}

sim-time-limit = ${simTimeLimit = 5.2}s

**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = false}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s
**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = false}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s

**.k = ${K = 8}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097500}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.122000, 0.040600, 0.024400, 0.017400, 0.013500}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "./"

**.edge[*].eth[*].mac.queue.typename = ${edgeQueueType = "V2PIFO"}
**.edge[*].eth[*].mac.queue.dataCapacity = ${edgeQueueSizePacketBytes = 300000}B
**.edge[*].use_v2_pifo = ${edgeUseV2Pifo = true}
**.edge[*].eth[*].mac.queue.dropper_type = ${edgeDropperType = "FIFO"}
**.edge[*].eth[*].mac.queue.scheduler_type = ${edgeSchedulerType = "FIFO"}
**.edge[*].eth[*].mac.queue.dctcp_thresh = ${edgeQueueSizeDCTCPThresh = 65}

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = $edgeQueueType}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = $edgeQueueSizePacketBytes}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = $edgeUseV2Pifo}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = $edgeDropperType}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = $edgeSchedulerType}
**.agg[*].eth[*].mac.queue.dctcp_thresh = ${aggQueueSizeDCTCPThresh = $edgeQueueSizeDCTCPThresh}

**.core[*].eth[*].mac.queue.typename = ${coreQueueType = $edgeQueueType}
**.core[*].eth[*].mac.queue.dataCapacity = ${coreQueueSizePacketBytes = $edgeQueueSizePacketBytes}B
**.core[*].use_v2_pifo = ${coreUseV2Pifo = $edgeUseV2Pifo}
**.core[*].eth[*].mac.queue.dropper_type = ${coreDropperType = $edgeDropperType}
**.core[*].eth[*].mac.queue.scheduler_type = ${coreSchedulerType = $edgeSchedulerType}
**.core[*].eth[*].mac.queue.dctcp_thresh = ${coreQueueSizeDCTCPThresh = $edgeQueueSizeDCTCPThresh}

**.edge[*].eth[*].mac.typename = ${edgeMacTypeName = "AugmentedEtherMac"}
**.agg[*].eth[*].mac.typename = ${aggMacTypeName = $edgeMacTypeName}
**.core[*].eth[*].mac.typename = ${coreMacTypeName = $edgeMacTypeName}
**.edge[*].relayUnit.typename = ${edgeRelayTypeName = "BouncingIeee8021dRelay"}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = $edgeRelayTypeName}
**.core[*].relayUnit.typename = ${coreRelayTypeName = $edgeRelayTypeName}

**.edge[*].bounce_randomly = ${edgeBounceRandomly = false}
**.agg[*].bounce_randomly = ${aggBounceRandomly = $edgeBounceRandomly}
**.core[*].bounce_randomly = ${coreBounceRandomly = $edgeBounceRandomly}

**.edge[*].bounce_randomly_v2 = ${edgeBounceRandomlyPowerOfN = false}
**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = $edgeBounceRandomlyPowerOfN}
**.core[*].bounce_randomly_v2 = ${coreBounceRandomlyPowerOfN = $edgeBounceRandomlyPowerOfN}
**.edge[*].random_power_bounce_factor = ${edgeBounceRandomlyPowerFactor = 2}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = $edgeBounceRandomlyPowerFactor}
**.core[*].random_power_bounce_factor = ${coreBounceRandomlyPowerFactor = $edgeBounceRandomlyPowerFactor}

**.edge[*].denominator_for_retrasnmissions = ${edgeDenomRet = 2}
**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = $edgeDenomRet}
**.core[*].denominator_for_retrasnmissions = ${coreDenomRet = $edgeDenomRet}

**.arp.typename = "GlobalArp"
**.edge[*].learn_mac_addresses = false
**.agg[*].learn_mac_addresses = false
**.core[*].learn_mac_addresses = false
**.edge[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_edge[" + string(parentIndex()) + "].txt"
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_agg[" + string(parentIndex()) + "].txt"
**.core[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_core[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}



########################################################################
[Config DCTCP_DIBS_fattree]
network = FatTree

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = true}
**.useECMP = ${usingECMP = true}
**.use_power_of_n_lb = ${usingPowerOfNLB = false}
**.edge[*].random_power_factor = ${edgeRandomPowerFactor = 2}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = $edgeRandomPowerFactor}
**.core[*].random_power_factor = ${coreRandomPowerFactor = $edgeRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "DCTcp"
**.tcp.ecnWillingness = ${ecnWill = true}

sim-time-limit = ${simTimeLimit = 5.2}s

**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = false}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s
**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = false}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s

**.k = ${K = 8}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097500}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.122000, 0.040600, 0.024400, 0.017400, 0.013500}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "./"

**.edge[*].eth[*].mac.queue.typename = ${edgeQueueType = "V2PIFO"}
**.edge[*].eth[*].mac.queue.dataCapacity = ${edgeQueueSizePacketBytes = 300000}B
**.edge[*].use_v2_pifo = ${edgeUseV2Pifo = true}
**.edge[*].eth[*].mac.queue.dropper_type = ${edgeDropperType = "FIFO"}
**.edge[*].eth[*].mac.queue.scheduler_type = ${edgeSchedulerType = "FIFO"}
**.edge[*].eth[*].mac.queue.dctcp_thresh = ${edgeQueueSizeDCTCPThresh = 65}

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = $edgeQueueType}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = $edgeQueueSizePacketBytes}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = $edgeUseV2Pifo}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = $edgeDropperType}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = $edgeSchedulerType}
**.agg[*].eth[*].mac.queue.dctcp_thresh = ${aggQueueSizeDCTCPThresh = $edgeQueueSizeDCTCPThresh}

**.core[*].eth[*].mac.queue.typename = ${coreQueueType = $edgeQueueType}
**.core[*].eth[*].mac.queue.dataCapacity = ${coreQueueSizePacketBytes = $edgeQueueSizePacketBytes}B
**.core[*].use_v2_pifo = ${coreUseV2Pifo = $edgeUseV2Pifo}
**.core[*].eth[*].mac.queue.dropper_type = ${coreDropperType = $edgeDropperType}
**.core[*].eth[*].mac.queue.scheduler_type = ${coreSchedulerType = $edgeSchedulerType}
**.core[*].eth[*].mac.queue.dctcp_thresh = ${coreQueueSizeDCTCPThresh = $edgeQueueSizeDCTCPThresh}

**.edge[*].eth[*].mac.typename = ${edgeMacTypeName = "AugmentedEtherMac"}
**.agg[*].eth[*].mac.typename = ${aggMacTypeName = $edgeMacTypeName}
**.core[*].eth[*].mac.typename = ${coreMacTypeName = $edgeMacTypeName}
**.edge[*].relayUnit.typename = ${edgeRelayTypeName = "BouncingIeee8021dRelay"}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = $edgeRelayTypeName}
**.core[*].relayUnit.typename = ${coreRelayTypeName = $edgeRelayTypeName}

**.edge[*].bounce_randomly = ${edgeBounceRandomly = true}
**.agg[*].bounce_randomly = ${aggBounceRandomly = $edgeBounceRandomly}
**.core[*].bounce_randomly = ${coreBounceRandomly = $edgeBounceRandomly}

**.edge[*].bounce_randomly_v2 = ${edgeBounceRandomlyPowerOfN = false}
**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = $edgeBounceRandomlyPowerOfN}
**.core[*].bounce_randomly_v2 = ${coreBounceRandomlyPowerOfN = $edgeBounceRandomlyPowerOfN}
**.edge[*].random_power_bounce_factor = ${edgeBounceRandomlyPowerFactor = 2}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = $edgeBounceRandomlyPowerFactor}
**.core[*].random_power_bounce_factor = ${coreBounceRandomlyPowerFactor = $edgeBounceRandomlyPowerFactor}

**.edge[*].denominator_for_retrasnmissions = ${edgeDenomRet = 2}
**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = $edgeDenomRet}
**.core[*].denominator_for_retrasnmissions = ${coreDenomRet = $edgeDenomRet}

**.arp.typename = "GlobalArp"
**.edge[*].learn_mac_addresses = false
**.agg[*].learn_mac_addresses = false
**.core[*].learn_mac_addresses = false
**.edge[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_edge[" + string(parentIndex()) + "].txt"
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_agg[" + string(parentIndex()) + "].txt"
**.core[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_core[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}


########################################################################
[Config DCTCP_Vertigo_fattree]
network = FatTree

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = false}
**.use_power_of_n_lb = ${usingPowerOfNLB = true}
**.edge[*].random_power_factor = ${edgeRandomPowerFactor = 2}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = $edgeRandomPowerFactor}
**.core[*].random_power_factor = ${coreRandomPowerFactor = $edgeRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "DCTcp"
**.tcp.ecnWillingness = ${ecnWill = true}

sim-time-limit = ${simTimeLimit = 5.2}s

**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = true}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s
**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = true}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s

**.k = ${K = 8}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097500}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.122000, 0.040600, 0.024400, 0.017400, 0.013500}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "./"

**.edge[*].eth[*].mac.queue.typename = ${edgeQueueType = "V2PIFO"}
**.edge[*].eth[*].mac.queue.dataCapacity = ${edgeQueueSizePacketBytes = 300000}B
**.edge[*].use_v2_pifo = ${edgeUseV2Pifo = true}
**.edge[*].eth[*].mac.queue.dropper_type = ${edgeDropperType = "SRPT"}
**.edge[*].eth[*].mac.queue.scheduler_type = ${edgeSchedulerType = "SRPT"}
**.edge[*].eth[*].mac.queue.dctcp_thresh = ${edgeQueueSizeDCTCPThresh = 65}

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = $edgeQueueType}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = $edgeQueueSizePacketBytes}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = $edgeUseV2Pifo}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = $edgeDropperType}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = $edgeSchedulerType}
**.agg[*].eth[*].mac.queue.dctcp_thresh = ${aggQueueSizeDCTCPThresh = $edgeQueueSizeDCTCPThresh}

**.core[*].eth[*].mac.queue.typename = ${coreQueueType = $edgeQueueType}
**.core[*].eth[*].mac.queue.dataCapacity = ${coreQueueSizePacketBytes = $edgeQueueSizePacketBytes}B
**.core[*].use_v2_pifo = ${coreUseV2Pifo = $edgeUseV2Pifo}
**.core[*].eth[*].mac.queue.dropper_type = ${coreDropperType = $edgeDropperType}
**.core[*].eth[*].mac.queue.scheduler_type = ${coreSchedulerType = $edgeSchedulerType}
**.core[*].eth[*].mac.queue.dctcp_thresh = ${coreQueueSizeDCTCPThresh = $edgeQueueSizeDCTCPThresh}

**.edge[*].eth[*].mac.typename = ${edgeMacTypeName = "AugmentedEtherMac"}
**.agg[*].eth[*].mac.typename = ${aggMacTypeName = $edgeMacTypeName}
**.core[*].eth[*].mac.typename = ${coreMacTypeName = $edgeMacTypeName}
**.edge[*].relayUnit.typename = ${edgeRelayTypeName = "BouncingIeee8021dRelay"}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = $edgeRelayTypeName}
**.core[*].relayUnit.typename = ${coreRelayTypeName = $edgeRelayTypeName}

**.edge[*].bounce_randomly = ${edgeBounceRandomly = false}
**.agg[*].bounce_randomly = ${aggBounceRandomly = $edgeBounceRandomly}
**.core[*].bounce_randomly = ${coreBounceRandomly = $edgeBounceRandomly}

**.edge[*].bounce_randomly_v2 = ${edgeBounceRandomlyPowerOfN = true}
**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = $edgeBounceRandomlyPowerOfN}
**.core[*].bounce_randomly_v2 = ${coreBounceRandomlyPowerOfN = $edgeBounceRandomlyPowerOfN}
**.edge[*].random_power_bounce_factor = ${edgeBounceRandomlyPowerFactor = 2}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = $edgeBounceRandomlyPowerFactor}
**.core[*].random_power_bounce_factor = ${coreBounceRandomlyPowerFactor = $edgeBounceRandomlyPowerFactor}

**.edge[*].denominator_for_retrasnmissions = ${edgeDenomRet = 2}
**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = $edgeDenomRet}
**.core[*].denominator_for_retrasnmissions = ${coreDenomRet = $edgeDenomRet}

**.arp.typename = "GlobalArp"
**.edge[*].learn_mac_addresses = false
**.agg[*].learn_mac_addresses = false
**.core[*].learn_mac_addresses = false
**.edge[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_edge[" + string(parentIndex()) + "].txt"
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_agg[" + string(parentIndex()) + "].txt"
**.core[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_core[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}


########################################################################
[Config DCTCP_Vertigo_LAS_fattree]
network = FatTree

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = false}
**.use_power_of_n_lb = ${usingPowerOfNLB = true}
**.edge[*].random_power_factor = ${edgeRandomPowerFactor = 2}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = $edgeRandomPowerFactor}
**.core[*].random_power_factor = ${coreRandomPowerFactor = $edgeRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "DCTcp"
**.tcp.ecnWillingness = ${ecnWill = true}

repeat = 1
sim-time-limit = ${simTimeLimit = 5.2}s

**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = true}
**.ipv4.ip.marking_type = ${markingType = "LAS"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s
**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = true}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s

**.k = ${K = 8}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097500}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.122000, 0.040600, 0.024400, 0.017400, 0.013500}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "./"

**.edge[*].eth[*].mac.queue.typename = ${edgeQueueType = "V2PIFO"}
**.edge[*].eth[*].mac.queue.dataCapacity = ${edgeQueueSizePacketBytes = 300000}B
**.edge[*].use_v2_pifo = ${edgeUseV2Pifo = true}
**.edge[*].eth[*].mac.queue.dropper_type = ${edgeDropperType = "LAS"}
**.edge[*].eth[*].mac.queue.scheduler_type = ${edgeSchedulerType = "LAS"}
**.edge[*].eth[*].mac.queue.dctcp_thresh = ${edgeQueueSizeDCTCPThresh = 65}

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = $edgeQueueType}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = $edgeQueueSizePacketBytes}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = $edgeUseV2Pifo}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = $edgeDropperType}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = $edgeSchedulerType}
**.agg[*].eth[*].mac.queue.dctcp_thresh = ${aggQueueSizeDCTCPThresh = $edgeQueueSizeDCTCPThresh}

**.core[*].eth[*].mac.queue.typename = ${coreQueueType = $edgeQueueType}
**.core[*].eth[*].mac.queue.dataCapacity = ${coreQueueSizePacketBytes = $edgeQueueSizePacketBytes}B
**.core[*].use_v2_pifo = ${coreUseV2Pifo = $edgeUseV2Pifo}
**.core[*].eth[*].mac.queue.dropper_type = ${coreDropperType = $edgeDropperType}
**.core[*].eth[*].mac.queue.scheduler_type = ${coreSchedulerType = $edgeSchedulerType}
**.core[*].eth[*].mac.queue.dctcp_thresh = ${coreQueueSizeDCTCPThresh = $edgeQueueSizeDCTCPThresh}

**.edge[*].eth[*].mac.typename = ${edgeMacTypeName = "AugmentedEtherMac"}
**.agg[*].eth[*].mac.typename = ${aggMacTypeName = $edgeMacTypeName}
**.core[*].eth[*].mac.typename = ${coreMacTypeName = $edgeMacTypeName}
**.edge[*].relayUnit.typename = ${edgeRelayTypeName = "BouncingIeee8021dRelay"}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = $edgeRelayTypeName}
**.core[*].relayUnit.typename = ${coreRelayTypeName = $edgeRelayTypeName}

**.edge[*].bounce_randomly = ${edgeBounceRandomly = false}
**.agg[*].bounce_randomly = ${aggBounceRandomly = $edgeBounceRandomly}
**.core[*].bounce_randomly = ${coreBounceRandomly = $edgeBounceRandomly}

**.edge[*].bounce_randomly_v2 = ${edgeBounceRandomlyPowerOfN = true}
**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = $edgeBounceRandomlyPowerOfN}
**.core[*].bounce_randomly_v2 = ${coreBounceRandomlyPowerOfN = $edgeBounceRandomlyPowerOfN}
**.edge[*].random_power_bounce_factor = ${edgeBounceRandomlyPowerFactor = 2}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = $edgeBounceRandomlyPowerFactor}
**.core[*].random_power_bounce_factor = ${coreBounceRandomlyPowerFactor = $edgeBounceRandomlyPowerFactor}

**.edge[*].denominator_for_retrasnmissions = ${edgeDenomRet = 2}
**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = $edgeDenomRet}
**.core[*].denominator_for_retrasnmissions = ${coreDenomRet = $edgeDenomRet}

**.arp.typename = "GlobalArp"
**.edge[*].learn_mac_addresses = false
**.agg[*].learn_mac_addresses = false
**.core[*].learn_mac_addresses = false
**.edge[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_edge[" + string(parentIndex()) + "].txt"
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_agg[" + string(parentIndex()) + "].txt"
**.core[*].macTable.addressTableFile ="./MAC_Table_Data/fat_tree_core[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${K}_k_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}


########################################################################
[General]

record-eventlog = false
check-signals = false
cmdenv-redirect-output = true

**.tcp.typename = "Tcp"
**.tcp.useCustomIW = true
**.tcp.customIWMult = 10

**.app[*].dataTransferMode = "object"
**.tcp.delayedAcksEnabled = false
**.tcp.increasedIWEnabled = false
**.tcp.limitedTransmitEnabled = false
**.tcp.mss = 1452
**.tcp.nagleEnabled = true
**.tcp.recordStats = true
**.tcp.tcpAlgorithmClass = default
**.tcp.timestampSupport = true
**.tcp.windowScalingSupport = false

# maximum axvertisedwindow
**.tcp.advertisedWindow = 65535

cmdenv-redirect-output = true

**.server[*].app[*].localAddress = ""
**.server[*].app[*].replyDelay = normal(20us, 3us)

**.server[*].tcp.tcpConnectionFINRcv.statistic-recording = true
**.server[*].tcp.tcpConnectionSYNSent.statistic-recording = true
**.server[*].tcp.tcpConnectionSYNSentIsBursty.statistic-recording = true
**.server[*].app[*].requestSentRequesterID.statistic-recording = true
**.server[*].app[*].flowStartedRequesterID.statistic-recording = true
**.server[*].app[*].flowEndedRequesterID.statistic-recording = true
**.server[*].app[*].flowEndQueryID.statistic-recording = true
**.server[*].app[*].replyLengthAsked.statistic-recording = true

**.server[*].tcp.*.rtt.statistic-recording = true
**.server[*].app[*].chunksRcvdLength.statistic-recording = true
**.server[*].app[*].chunksRcvdTotalLength.statistic-recording = true
**.server[*].eth[*].mac.packetHopCount.statistic-recording = true
**.ipv4.ip.v2QTime.statistic-recording = true
**.statistic-recording = false


